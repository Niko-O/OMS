<?xml version="1.0"?>
<doc>
<assembly>
<name>
PluginInterfaces
</name>
</assembly>
<members>
<member name="E:PluginInterfaces.ICompositor.CatalogChanged">
	<summary>
 Wird ausgelöst, wenn ein Katalog hinzugefügt wird.
 </summary>
</member><member name="M:PluginInterfaces.ICompositor.AddPluginDirectoryPath(System.String,System.Boolean)">
	<summary>
 Fügt den angegebenen Ordner der Liste an Pfaden, in denen nach Kompositions-Assemblies gesucht wird, hinzu.
 Wenn der Ordner nicht existiert, wird er erstellt.
 </summary>
	<param name="DirectoryPath">Der Pfad des Ordners, in dem nach Kompositions-Assemblies gesucht wird.</param>
	<param name="Recursive">Gibt an, ob alle Unterordner des angegebenen Ordners ebenfalls hinzugefügt werden.</param>
</member><member name="M:PluginInterfaces.ICompositor.Compose(System.Object)">
	<summary>
 Führt eine Komposition für das angegebene Objekt durch und befüllt die <see cref="T:System.ComponentModel.Composition.ImportAttribute"/>- und <see cref="T:System.ComponentModel.Composition.ImportManyAttribute"/>-Schnittstellen.
 </summary>
	<param name="Obj">Das Objekt, dessen Kompositions-Schnittstellen befüllt werden.</param>
</member><member name="T:PluginInterfaces.ICompositor">
	<summary>
 Stellt methoden zur Verfügung, mit denen MEF-Komposition durchgeführt werden kann.
 </summary>
</member><member name="M:PluginInterfaces.IPlugin.GetSnapIn">
	<summary>
 Gibt ein WPF-<see cref="T:System.Windows.Controls.UserControl"/> zurück, das Einstellungen für dieses Plugin anzeigt.
 Gibt Null zurück, wenn keine Einstellungen verfügbar sind. 
 </summary>
</member><member name="M:PluginInterfaces.IPlugin.Created">
	<summary>
 Benachrichtigt das Plugin, dass es geladen wurde. In dieser Methode können z.B. Einstellungen geladen werden.
 </summary>
</member><member name="M:PluginInterfaces.IPlugin.Unloaded">
	<summary>
 Benachrichtigt das Plugin, dass die Anwendung beendet wird. In dieser Methode können z.B. Einstellungen gespeichert werden.
 </summary>
</member><member name="M:PluginInterfaces.IPlugin.Enabled">
	<summary>
 Benachrichtigt das Plugin, dass es aktiviert wurde.
 </summary>
</member><member name="M:PluginInterfaces.IPlugin.Disabled">
	<summary>
 Benachrichtigt das Plugin, dass es deaktiviert wurde.
 </summary>
</member><member name="T:PluginInterfaces.IPlugin">
	<summary>
 Stellt ein Plugin dar und stellt, wenn vorhanden, ein WPF-<see cref="T:System.Windows.Controls.UserControl"/> bereit, das Einstellungen für dieses Plugin anzeigt.
 </summary>
</member><member name="P:PluginInterfaces.IPluginMetadata.DisplayName">
	<summary>
 Der Anzeigename des Plugins.
 </summary>
</member><member name="P:PluginInterfaces.IPluginMetadata.PluginGuid">
	<summary>
 Die String-Darstellung der Plugin-Id als <see cref="T:System.Guid"/>.
 Beispiel: "28561b54-68c3-4941-a84b-e25fc612b069"
 </summary>
</member><member name="T:PluginInterfaces.IPluginMetadata">
	<summary>
 Stellt Metadaten (Name und Guid) für Plugins dar.
 </summary>
</member><member name="P:PluginInterfaces.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:PluginInterfaces.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:PluginInterfaces.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:PluginInterfaces.ISettingsProvider.SaveSettings(PluginSettings.SettingsStructure)">
	<summary>
 Speichert rekursiv die in der angegebenen Einstellungs-Struktur enthaltenen Eigenschaften.
 </summary>
	<param name="Settings">Die Einstellungs-Struktur, derer Eigenschaften gespeichert werden.</param>
</member><member name="M:PluginInterfaces.ISettingsProvider.LoadSettings(PluginSettings.SettingsStructure)">
	<summary>
 Lädt rekursiv die Eigenschaften für die angegebene Einstellungs-Struktur.
 Gibt False zurück, wenn für die angegebene Einstellungs-Struktur keine Einstellungen gefunden wurden.
 </summary>
	<param name="Settings">Die Einstellungs-Struktur, derer Eigenschaften geladen werden.</param>
</member><member name="T:PluginInterfaces.ISettingsProvider">
	<summary>
 Stellt Methoden zur Verfügung, mit denen Einstellungen geladen und gespeichert werden können.
 Einstellungen werden anhand des Laufzeittyps der an die <see cref="M:PluginInterfaces.ISettingsProvider.SaveSettings(PluginSettings.SettingsStructure)"/>- und <see cref="M:PluginInterfaces.ISettingsProvider.LoadSettings(PluginSettings.SettingsStructure)"/>-Funktionen übergebenen <see cref="T:PluginSettings.SettingsStructure"/> identifiziert.
 Mehrere Plugins, die unterschiedliche Instanzen des selben <see cref="T:PluginSettings.SettingsStructure"/>-Typs laden, verwenden automatisch die selben Einstellungen.
 Für weitere Details siehe Systemdokumentation.
 </summary>
</member>
</members>
</doc>